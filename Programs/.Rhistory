install.packages("ggplot2")
library(rio)
library(ggplot2)
install.packages("rio")
plotdata <- import(r'W:\SASWork\_TD22856_LT406_\familyoutcomes.sas7bdat")
install.packages("rio")
install.packages("rio")
library(rio)
library(ggplot2)
plotdata <- import(r'W:\SASWork\_TD22856_LT406_\familyoutcomes.sas7bdat")
plotdata <- import('W:\\SASWork\\_TD22856_LT406_\\familyoutcomes.sas7bdat")
""
''
'
plotdata <- import('W:\\SASWork\\_TD22856_LT406_\\familyoutcomes.sas7bdat')
head(plotdata)
plot = ggplot(plotdata, aes(x=expected,y=observed))+geom_point(alpha=0.5)
plot=plot+xlim(0,25)+ylim(0,25)
plot=plot + geom_abline(slope=1)
plot
ggsave("k:\\SCANDAT\obsexp.png", plot)
plot = ggplot(plotdata, aes(x=expected,y=observed))+geom_point(alpha=0.1, fill="#00abff")
plot=plot+xlim(0,25)+ylim(0,25)
plot=plot + geom_abline(slope=1)
ggsave("k:\\SCANDAT\\obsexp.png", plot)
install.packages("rio")
library(rio)
library(ggplot2)
library(lme4)
dataset <- import('h:\\sd2.sas7bdat')
head(datset)
head(dataset)
install.packages(c("lme4", "nlme", "lmerTest"))
install.packages(c("lme4", "nlme", "lmerTest"))
library(lme4)
library(nlme)
#install.packages(c("lme4", "nlme", "lmerTest"))
library(rio)
library(ggplot2)
library(lme4)
library(nlme)
library(lmerTest)
dataset <- import('h:\\sd2.sas7bdat')
head(dataset)
model <- lmer(value ~ Insulintyp + (1|block) +
corAR1(form= ~ local_time | block),
data = dataset)
model <- lmer(value ~ Insulintyp + (1|Block) +
corAR1(form= ~ local_time | Block),
data = dataset)
model <- lmer(value ~ Insulintyp + (1) +
corAR1(form= ~ local_time),
data = dataset)
typical_block_data <- subset(your_data, block == 1)
typical_block_data <- subset(dataset, block == 1)
typical_block_data <- subset(dataset, Block == 1)
acf(typical_block_data$value)
pacf(typical_block_data$value)
acf(typical_block_data$value)
pacf(typical_block_data$value)
model <- lme(value ~ insulintype,
random = ~ 1 | block,
correlation = corAR1(form = ~ local_time | block),
data = dataset)
model <- lme(value ~ insulintype,
random = ~ 1 | Block,
correlation = corAR1(form = ~ local_time | block),
data = dataset)
random = ~ 1 | Block,
model <- lme(value ~ insulintyp,
random = ~ 1 | Block,
correlation = corAR1(form = ~ local_time | Block),
data = dataset)
model <- lme(value ~ Insulintyp,
random = ~ 1 | Block,
correlation = corAR1(form = ~ local_time | Block),
data = dataset)
model <- lme(value ~ Insulintyp,
random = ~ 1,
correlation = corAR1(form = ~ local_time),
data = dataset)
model <- lme(value ~ Insulintyp,
random = ~ 1 | Block,
correlation = corAR1(form = ~ local_time | Block),
data = dataset)
-
dataset <- import('h:\\sd2.sas7bdat')
dataset <- import('h:\\sd2.sas7bdat')
model <- lme(value ~ Insulintyp,
random = ~ 1 | Block,
correlation = corAR1(form = ~ local_time | Block),
data = dataset)
summary(model)
model <- lme(value ~ Insulintyp,
correlation = corAR1(form = ~ local_time | Block),
data = dataset)
model <- lme(value ~ Insulintyp,
correlation = corAR1(form = ~ local_time),
data = dataset)
model <- lme(value ~ Insulintyp + (1),
correlation = corAR1(form = ~ local_time),
data = dataset)
model <- lme(value ~ Insulintyp,
random= ~ 1,
correlation = corAR1(form = ~ local_time),
data = dataset)
model <- lme(value ~ Insulintyp,
random = ~ 1 | person,
correlation = corAR1(form = ~ local_time | person),
data = dataset)
summary(model)
intervals(model)
intervals(model, which="fixed")
library(dplyr)
# Preprocessing
# First, let's convert 'local_time' to a time since the start of each block.
# For this, we'll first find the start time of each block.
start_times <- dataset %>%
group_by(Block) %>%
summarize(start_time = min(local_time))
# Join the start times back to the original dataset and compute time difference
dataset <- dataset %>%
left_join(start_times, by = "Block") %>%
mutate(time_since_start = as.numeric(difftime(local_time, start_time, units = "mins")))
avg_glucose_time <- dataset %>%
group_by(Block, Insulintyp) %>%
summarize(
mean_value = mean(value, na.rm = TRUE),
mean_time = mean(time_since_start, na.rm = TRUE)
)
# Plotting with ggplot2
ggplot(avg_glucose_time, aes(x = mean_time, y = mean_value, color = Insulintyp, group = Insulintyp)) +
geom_line(aes(linetype = Insulintyp), size = 1) + # Lines connecting the averages
geom_point(size = 3) + # Points for each average
labs(
title = "Average Blood Glucose by Time Since Start of Block and Insulin Type",
x = "Time Since Start of Block (minutes)",
y = "Average Blood Glucose",
color = "Insulin Type",
linetype = "Insulin Type"
) +
theme_minimal() +
theme(legend.position = "top")
plot = ggplot(avg_glucose_time, aes(x = mean_time, y = mean_value, color = Insulintyp, group = Insulintyp)) +
geom_line(aes(linetype = Insulintyp), size = 1) + # Lines connecting the averages
geom_point(size = 3)
plot
model2 <- lme(value ~ Insulintyp,
random = ~ 1 | person,
correlation = corARMA(p=2, form= ~ local_time | person),
data = dataset)
summary(model2)
summary(model2)
intervals(model2, which="fixed")
dataset <- import('\\..\\Data\\studydataset.sas7bdat')
dataset <- import('..\\Data\\studydataset.sas7bdat')
dataset <- import('./../Data/studydataset.sas7bdat')
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
dataset <- import('/../Data/studydataset.sas7bdat')
dataset <- import('../Data/studydataset.sas7bdat')
head(dataset)
acf(dataset$value)
pacf(dataset$value)
print(utils::getSrcDirectory(function(){}))
print(utils::getSrcDirectory(function(){}, full.names=TRUE))
setwd(getSrcDirectory(function(){})[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
save(model,file="LMEAR1 model.rds")
#Store for later use
save(model2,file="LMEAR2 model.rds")
